\usepackage{accents}            % for \underaccent
\usepackage{amssymb}           %\triangleq?
\usepackage{anyfontsize}        % suppress warnings about stmaryrd font size
\usepackage{booktabs}           % \midrule
\usepackage{mathpartir}         % \begin{mathpar}, \infer, etc.
\usepackage{mathtools}          % vertical centered colon, \dblcolon, \Coloneqq
%\usepackage{multirow}           % \multirow
\usepackage{nccmath}      % fleqn environment, fix spacing around AMS math environments like align*; but also creates spacing problems around mathpar :(
%\usepackage{pgfplots}\pgfplotsset{compat=1.5}
\usepackage{amsmath}
%\usepackage{placeins}           %\FloatBarrier
\usepackage{stmaryrd}           % \shortrightarrow, \llbracket, etc.
%\usepackage{subcaption}   % for complex figures with subfigures/subcaptions
\usepackage{adjustbox}          % \adjustbox (used for eg \iso)
%\usepackage{tabu}               % tabu environment, \rowfont
\usepackage{environ}            % \NewEnviron
%\usepackage{pifont}             % \ding{55}
\usepackage{ifthen}             % \ifthenelse

\hyphenation{semi-na\"ive} % TODO necessary? does it work?

% Use stmry medium as bold since there is no stmry bold.
\SetSymbolFont{stmry}{bold}{U}{stmry}{m}{n}

%% % Use Zapf Chancery as \mathscr font. Passing scr=zapfc to mathalfa doesn't
%% % handle lowercase letters for some reason. Scaled by eye-matching x-heights
%% % with Euler/XCharter at scaled=.94.
%% \DeclareFontFamily{OT1}{pzc}{}
%% \DeclareFontShape{OT1}{pzc}{m}{it}{<-> s * [1.13] pzcmi7t}{}
%% \DeclareMathAlphabet{\mathscr}{OT1}{pzc}{m}{it}

% Default to vertically centered colons. Doesn't quite work with euler, but
% better than nothing.
\mathtoolsset{centercolon}

%% More space around \cup, \vee, \wedge.
\let\bincup\cup
\let\bincap\cap
\let\binvee\vee
\let\binwedge\wedge
\let\binbullet\bullet
\renewcommand\cup{\mathrel{\bincup}}
\renewcommand\cap{\mathrel{\bincap}}
\renewcommand\vee{\mathrel{\binvee}}
\renewcommand\wedge{\mathrel{\binwedge}}
\renewcommand\bullet{\mathrel{\binbullet}}

\newcommand\todocolor{\color{OrangeRed}}
%\newcommand\todowarn[1]{\PackageWarning{notation}{TODO}{\todocolor #1}}
\newcommand\warntodo[2]{%
  %\PackageWarning{notation}{TODO: #1}% TODO fix TODOs
  {\todocolor\ensuretext{\bfseries\sffamily[{#2}]}}}
\newcommand\splittodo[2]{\warntodo{#1}{#1 #2}}
\newcommand\todo[1]{\warntodo{#1}{#1}}
\newcommand\XXX{\PackageWarning{notation}{XXX}\textbf{\todocolor XXX}}


%% ---------- Environments ----------
\newlength\codeoffset\setlength\codeoffset{20pt}

\NewEnviron{code}{
  \begin{fleqn}[\codeoffset]
    \begin{flalign*}
      \begin{array}{l}\BODY\end{array}
  \end{flalign*}
  \end{fleqn}
}

%% \NewEnviron{flail}{
%%   \begin{fleqn}[\codeoffset]
%%     \begin{align*}
%%       \BODY
%%     \end{align*}
%%   \end{fleqn}
%% }


%% ---------- Commands ----------
\newcommand{\negphantom}[1]{\settowidth{\dimen0}{#1}\hspace*{-\dimen0}}
\newcommand\ensuretext[1]{\ifmmode\text{#1}\else{#1}\fi}
\newcommand\naive{na\"ive}
\newcommand\Naive{Na\"ive}
\makeatletter
\def\removekerning#1{\@removekerning#1$\unskip}
\def\@removekerning{\@ifnextchar${\@gobble}{\sw@p{\kern0pt\@removekerning}}}
\def\sw@p#1#2{#2#1}
\makeatother

%% inference rule names
%% textls/textls* = do/don't add surrounding spacing. minimal difference.
%% TODO: XCharter small-caps question mark.
\newcommand\rn[1]{\textsc{\textls[70]{%
      \ifthenelse{\equal{#1}{var}}{v\kern-.5pt ar%
      }{\ifthenelse{\equal{#1}{dvar}}{d\kern-.1pt v\kern-.5pt ar%
        }{\ifthenelse{\equal{#1}{pair}}{p\kern-.3pt air%
          }{\ifthenelse{\equal{#1}{box}}{b\kern-.3pt o\kern-.1pt x%
            }{\ifthenelse{\equal{#1}{bot}}{b\kern-.3pt ot%
              }{\ifthenelse{\equal{#1}{letbox}}{letb\kern-.3pt o\kern-.1pt x%
                }{\ifthenelse{\equal{#1}{empty?}}{empty%
                  }{%\removekerning
                    #1}}}}}}}}}}
%\renewcommand\rn[1]{\textsf{\scshape\textls[40]{\removekerning{#1}}}}

%% For some colorblindness stuff, see:
%% https://davidmathlogic.com/colorblind/
%% http://mkweb.bcgsc.ca/colorblind/
%% https://www.nature.com/articles/nmeth.1618?WT.ec_id=NMETH-201106
%\definecolor{ColorA}{cmyk}{0, 0.56, .8, 0.43}  % #994A20
%\definecolor{ColorB}{cmyk}{0.75, 1, 0, 0}      % #5E2590
%\definecolor{LinkBlue}{cmyk}{1, 0.36, 0, 0}
\definecolor{IsoRed}{cmyk}{0, 1, 1, 0} % tried: K=0, 0.06, 0.12
\definecolor{IsoRed}{Hsb}{0, 1, .85}

%% Blue for discrete things just doesn't stand out enough when printed unless I
%% make it totally cyan, which is too light to be easily readable on white. Red
%% is the standard printers' second color for a reason.
\newcommand\isocolor{\color{IsoRed}}
\newcommand\isocolorname{red}

%% Confusingly, pure CMYK yellow doesn't seem to actually generate pure yellow
%% on the printers I've tried. It has red dots in it instead.
\definecolor{isobg}{Hsb}{60, 0.42, 1}
\newcommand\isobgname{yellow}

% used for names of functions, primitives, etc. in math mode
\newcommand\name\textit
\renewcommand\name[1]{\texorpdfstring{\TextOrMath{\textit{#1}}{\mathit{#1}}}{\textit{#1}}}

% derivative variables
\newcommand\da{\mathvar{da}}
\newcommand\db{\mathvar{db}}
\newcommand\dx{\mathvar{dx}}
\newcommand\dy{\mathvar{dy}}
\newcommand\df{\mathvar{df}}
\newcommand\dg{\mathvar{dg}}
\newcommand\ds{\mathvar{ds}}
\newcommand\dt{\mathvar{dt}}
\newcommand\dgamma{d\gamma}


%% ===== General math & PL notation =====
\newcommand\fn{\texorpdfstring{\ensuremath{\lambda}}{lambda}}
\newcommand\boldfn{\texorpdfstring{\ensuremath{\boldsymbol\lambda}}{\textlambda}}
\ifdefined\G\renewcommand\G\Gamma\else\newcommand\G\Gamma\fi
\newcommand\g\gamma
\newcommand\D\Delta
\newcommand\DP{\D\Phi}
\newcommand\x\times
\newcommand\pto\rightharpoonup
\newcommand\injc{\mathrm{in}}
\newcommand\inj[1]{\injc_{#1}\,}
\newcommand\bnfor{\mathrel{\,|\,}}
\newcommand\bnfeq\Coloneqq
\newcommand\N{\mathbb{N}}
\newcommand\tuple[1]{({#1})}
\newcommand\den[1]{\ensuremath{\llbracket{#1}\rrbracket}}
% Space for function application.
\newcommand\<\;
\newcommand\fnspace{\;}
\newcommand\fnof[1]{\fn{#1}.\fnspace}
\newcommand\setfor[2]{\ensuremath{\{#1 \mathrel{|} #2\}}}

\newcommand\quantifierspace{\ }
\newcommand\quantify[1]{({#1})\quantifierspace}
\newcommand\fa[1]{\quantify{\forall #1}}
\newcommand\ex[1]{\quantify{\exists #1}}
\newcommand\faex[2]{\quantify{\forall #1, \exists #2}}
%% \renewcommand\fa[1]{\forall({\#1})\quantifierspace}
%% \renewcommand\ex[1]{\exists({\#1})\quantifierspace}

\newcommand\sub[2]{{#1}\,\{{#2}\}}
% discrete substitution
%\newcommand\substd[2]{\subst{#1}{\isocolor #2}}
\newcommand\subto[2]{{#1} \mapsto {#2}}
\newcommand\subone[3]{\sub{#1}{\subto{#2}{#3}}}

%% %% various marked equalities.
%% \newcommand\stareq{\overset{\boldsymbol\star}{=}}
%% \newcommand\daggereq{\overset{\dagger}{=}}
%% \newcommand\stardaggereq{\overset{\boldsymbol\star\dagger}{=}}

%% %% Used in sections 7 & 8
%% \newcommand\rewrites\leadsto


%% ===== Semantic and categorical notation =====
\newcommand\iso{{\texorpdfstring{\ensuremath{\square}}{box}}}
\newcommand\isox{\ensuremath{\morph{dist}^\x_\iso}}
\newcommand\isosum{\ensuremath{\morph{dist\kern.5pt}^\iso_+}}

\newcommand\cat[1]{\textrm{\bfseries#1}}
\newcommand\Set{\cat{Set}}
\newcommand\Poset{\cat{Poset}}
\newcommand\catC{\ensuremath{\mathcal{C}}}
\newcommand\id{\name{id}}
\newcommand\then\cdot

\newcommand\morph\name
\newcommand\fork[1]{\langle{#1}\rangle}
\newcommand\krof[1]{[{#1}]}

\newcommand\initialobject{0}
\newcommand\terminalobject{1}
\newcommand\expto\Rightarrow
%% TODO: remove these aliases?
%\newcommand\initO\initialobject
%\newcommand\termO\terminalobject

\newcommand\bigkrof[1]{\bigl[{#1}\bigr]}
%\newcommand\Fork[1]{\left\langle{#1}\right\rangle}
%\newcommand\Krof[1]{\left[{#1}\right]}
%\newcommand\initE{\krof{\kern .08em}}
%\newcommand\termI{\fork{}}
\newcommand\eval{\morph{eval}}

%% TODO: rename these?
\newcommand\pfin{\ensuremath{P}}
\newcommand\pfinof[1]{\pfin #1}
\newcommand\powerset{\mathcal{P}} % TODO: typeface
\newcommand\pcollect[1]{\morph{collect}({#1})}
\newcommand\morphstrip{\morph{strip}}
\newcommand\morphbox{\morph{box}}
\usepackage{xparse}
\DeclareDocumentCommand\morphjoin{m g}{%
  \ensuremath{\morph{join}^{#1}_{\IfNoValueF{#2}{#2}}}}
\newcommand\strip\morphstrip % TODO: remove this alias
\newcommand\mkbox{\morph{box}} % TODO: remove this alias


%% ==== Datalog notation ====
\newcommand\atom[2]{\name{#1}({#2})}
\newcommand\datum[1]{\textsf{#1}}


%% ===== Datafun syntax =====
\newcommand\isa{\::\:} %\renewcommand\isa{\,:\,}
\newcommand\desugars{\,\xrightarrow{\textsf{desugar}}\,}
\newcommand\kw\textbf
\newcommand\prim\name
\newcommand\caseto\shortrightarrow
\newcommand\casebar{;\;}
\newcommand\pwild{\underline{\phantom{o}}}
\newcommand\peq[1]{{}!{\eiso{#1}}}
\newcommand\peqvar[1]{\peq{\dvar{#1}}}

\newcommand\tset[1]{\{{#1}\}}
\newcommand\tunit{1}
\newcommand\tseteq[1]{\tset{\eqt{#1}}}
\newcommand\typename\name
\newcommand\tbool{\typename{bool}}
\newcommand\tstring{\typename{string}}
\newcommand\tint{\typename{int}}

%% Discrete variables are colored and italicised.
\newcommand\dvar[1]{\mathit{\isocolor#1}}
\newcommand\dvarlong\dvar
\newcommand\mvar[1]{#1}

\newcommand\undertype[2]{%
  \underaccent{\textls[75]{\sffamily\fontseries{sb}\upshape\scshape#1}}{#2}}
\newcommand\eqt[1]{\undertype{eq}{#1}}
\providecommand\fint{}
\renewcommand\fint[1]{\undertype{fin}{#1}}
\newcommand\fixt[1]{\undertype{fix}{#1}}

\newcommand\eiso[1]{\adjustbox{bgcolor=isobg,}{%
\vphantom{lp\textsuperscript{+}}% room for ascenders & descenders
\(\vphantom{}#1\)%
}}

\newcommand\elet[1]{\kw{let}\;{#1}\;\kw{in}\;}
\newcommand\efn[1]{\fnof{\mvar{#1}}}
\newcommand\etuple[1]{({#1})}
\newcommand\emcase[1]{\kw{case} \;{#1}\; \kw{of}\;}
\newcommand\edcase[1]{\kw{if} \;\eiso{#1}\; \kw{is}\;}
% TODO: remove this. make it warn!
\newcommand\efix{\PackageWarning{notation}{don't use efix}{}\todo{\prim{fix}}\<}
\newcommand\efixisraw[2][]{\kw{fix}_{#1}~{#2}~\kw{is}\fnspace}
\newcommand\efixis[3][]{\eiso{\efixisraw[#1]{\mvar{#2}}{#3}}}
\newcommand\esplit{\prim{split}\<}
\newcommand\eisemptyraw[1]{\prim{empty?}\<#1}
\newcommand\fastfix{\prim{semifix}}
\newcommand\eboxvar[1]{\ebox{\dvar{#1}}}
\newcommand\eboxvarlong[1]{\ebox{\dvarlong{#1}}}

\newcommand\ebox[1]{\eiso{\eboxraw{#1}}}
\newcommand\eletbox[2]{\elet{\pboxvar{#1} = {#2}}}
\newcommand\eeq[2]{\eiso{\eeqraw{#1}{#2}}}
\newcommand\eset[1]{\eiso{\esetraw{#1}}}
\newcommand\esetfor[2]{\setfor{\eiso{#1}}{#2}}
\newcommand\esetsub[2]{\eiso{\esetraw{#1}_{#2}}}
\newcommand\eisempty[1]{\eiso{\eisemptyraw\<#1}}
\newcommand\efor[2][]{\kw{for}_{#1}\:({#2})\fnspace}
\newcommand\eforin[2]{\efor{{#1} \in #2}}
\newcommand\eforvar[2]{\eforin{\dvar #1}{#2}}

\setlength\fboxsep{2.5pt}
\newcommand\emptyhole{\fbox{\color{gray}\sffamily ?}\kern1pt}
\renewcommand\emptyhole{\ensuremath{\Box}}
\newcommand\fillhole[2]{\sub{#1}{#2}}
\renewcommand\fillhole[2]{\subone{#1}{\emptyhole}{#2}}
%\newcommand\eiter[4][]{\prim{iter}_{#1}({#2},\, {#3}.\fnspace {#4})}
\newcommand\eiter[5][]{\prim{iter}_{#1}({#2},\, {#3},\, {#4}.\fnspace {#5})}
\newcommand\stepsto{\longmapsto}

%% \newcommand\bigeboxraw[1]{\bigl[{#1}\bigr]}
%% \newcommand\bigebox[1]{\eiso{\bigeboxraw{#1}}}
%% \newcommand\bigeboxtuple[1]{\bigebox{\etuple{#1}}}

% discrete operators without \isocolor
\newcommand\esetraw[1]{\{{#1}\}}
\newcommand\eboxraw[1]{[{#1}]}
\newcommand\eeqraw[3][]{{#2} =_{#1} {#3}}

\newcommand\ptuple\etuple
\newcommand\pboxvar[1]{\pbox{\dvar{#1}}}
\newcommand\pboxvarlong[1]{\pbox{\dvarlong{#1}}}
\newcommand\pbox[1]{\eboxraw{#1}}

\newcommand\eboxtupleraw[1]{\eboxraw{\etuple{#1}}}
\newcommand\eboxtuple[1]{\ebox{\etuple{#1}}}
\newcommand\pboxtuple[1]{\pbox{\ptuple{#1}}}

%% more surface syntax
\newcommand\ewhen[1]{\kw{when}\:({#1})\fnspace}
\newcommand\etrue{\prim{true}}
\newcommand\efalse{\prim{false}}


%% ===== Contexts and typing judgments =====
\newcommand\emptycx{\varepsilon}
%\newcommand\J[3]{{#1} \mathrel{\,:\,} {#2} \vdash {#3}}
\newcommand\J[3]{{#2} \vdash {#1} \mathrel{:} {#3}}
\newcommand\Jalign[3]{{#2} &\vdash {#1} \mathrel{:} {#3}}
\newcommand\hm[2]{\mvar{#1} : {#2}}
\newcommand\hd[2]{{\isocolor\dvar{#1} \dblcolon {#2}}}

\newcommand\stripcxraw[1]{\lceil{#1}\rceil}
\newcommand\stripcx\stripcxraw
%\newcommand\stripcx[1]{{\isocolor\stripcxraw{#1}}}


%% %% ===== Change theory & seminaive translation stuff =====
%% \newcommand\boldphi{\texorpdfstring{$\boldsymbol\phi$}{\textphi}}
%% \newcommand\bolddelta{\texorpdfstring{$\boldsymbol\delta$}{\textdelta}}
%% \newcommand\dummy{\name{dummy}}
%% \newcommand\zero{\ensuremath{\boldsymbol 0}}

%% \newcommand\changesto\leadsto
%% \newcommand\changescolon\dblcolon
%% %% \renewcommand\changesto\shortrightarrow
%% %% \renewcommand\changescolon{:}
%% \newcommand\changesat[4]{{#2} \changescolon_{#1} {#3} \changesto {#4}}
%% \newcommand\changes[3]{{#1} \changescolon {#2} \changesto {#3}}
%% %\renewcommand\changesat[4]{\changes{#2}{#3}{#4} : {#1}}

%% \DeclareMathOperator\Deriv{\mathscr{Derive}}

%% %% The logical relation
%% \newcommand\impls{\mathbin{\lightning}}
%% \newcommand\weird[5]{{#1} \changescolon #2 \impls #3 \shortrightarrow #4 \impls #4}
%% \newcommand\weirdat[6]{{#2} \changescolon_{#1} #3 \impls #4 \shortrightarrow #5 \impls #6}
%% %\renewcommand\weirdat[6]{\weird{#2}{#3}{#4}{#5}{#6} : #1}


%% Kerning adjustments
\newcommand\fixtLkern{\fixt{L}\kern.8pt}
\newcommand\kernfixtL{\kern.8pt\fixt{L}}
\renewcommand\fixtLkern{\fixt{L}}
\renewcommand\kernfixtL{\fixt{L}}

